---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}-ingress
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: ${TF_VAR_ENV_APP_BACKEND_SSL_CERT_ARN}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
         - path: /*
           pathType: ImplementationSpecific
           backend:
             service:
               name: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}-service
               port:
                 number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}-service
  annotations:
    external-dns.alpha.kubernetes.io/hostname: ${TF_VAR_ENV_APP_BACKEND_DOMAIN_NAME}
  labels:
    app: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}
spec:
  selector:
    app: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}
  ports:
  - name: http
    port: 80
  - name: https
    port: 443
    targetPort: 80
  type: LoadBalancer