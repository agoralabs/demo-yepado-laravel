---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}-ingress
  annotations:
    external-dns.alpha.kubernetes.io/hostname: ${TF_VAR_ENV_APP_BACKEND_DOMAIN_NAME}
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: ${TF_VAR_ENV_APP_BACKEND_SSL_CERT_ARN}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/group: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}-tg
    alb.ingress.kubernetes.io/target-type: ip
  labels:
    app: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}
spec:
  rules:
   - host: ${TF_VAR_ENV_APP_BACKEND_DOMAIN_NAME}
     http:
        paths:
          - path: /*
            backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
          - path: /*
            backend:
              serviceName: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}-service
              servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}-service
  labels:
    app: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}
spec:
  selector:
    app: ${TF_VAR_ENV_APP_BACKEND_NAMESPACE}-${TF_VAR_ENV_APP_NAME}
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: http
  type: LoadBalancer